#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLLaoDong")]
	public partial class QLLaoDongDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDanhSachChamCong(DanhSachChamCong instance);
    partial void UpdateDanhSachChamCong(DanhSachChamCong instance);
    partial void DeleteDanhSachChamCong(DanhSachChamCong instance);
    partial void InsertCongViec(CongViec instance);
    partial void UpdateCongViec(CongViec instance);
    partial void DeleteCongViec(CongViec instance);
    partial void InsertDanhSachCongViecCongTrinh(DanhSachCongViecCongTrinh instance);
    partial void UpdateDanhSachCongViecCongTrinh(DanhSachCongViecCongTrinh instance);
    partial void DeleteDanhSachCongViecCongTrinh(DanhSachCongViecCongTrinh instance);
    partial void InsertDanhSachPhanCong(DanhSachPhanCong instance);
    partial void UpdateDanhSachPhanCong(DanhSachPhanCong instance);
    partial void DeleteDanhSachPhanCong(DanhSachPhanCong instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertPhongBan(PhongBan instance);
    partial void UpdatePhongBan(PhongBan instance);
    partial void DeletePhongBan(PhongBan instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertCongTrinh(CongTrinh instance);
    partial void UpdateCongTrinh(CongTrinh instance);
    partial void DeleteCongTrinh(CongTrinh instance);
    #endregion
		
		public QLLaoDongDataContext() : 
				base(global::DAL.Properties.Settings.Default.QLLaoDongConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public QLLaoDongDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLLaoDongDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLLaoDongDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLLaoDongDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DanhSachChamCong> DanhSachChamCongs
		{
			get
			{
				return this.GetTable<DanhSachChamCong>();
			}
		}
		
		public System.Data.Linq.Table<CongViec> CongViecs
		{
			get
			{
				return this.GetTable<CongViec>();
			}
		}
		
		public System.Data.Linq.Table<DanhSachCongViecCongTrinh> DanhSachCongViecCongTrinhs
		{
			get
			{
				return this.GetTable<DanhSachCongViecCongTrinh>();
			}
		}
		
		public System.Data.Linq.Table<DanhSachPhanCong> DanhSachPhanCongs
		{
			get
			{
				return this.GetTable<DanhSachPhanCong>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<PhongBan> PhongBans
		{
			get
			{
				return this.GetTable<PhongBan>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<CongTrinh> CongTrinhs
		{
			get
			{
				return this.GetTable<CongTrinh>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhSachChamCong")]
	public partial class DanhSachChamCong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idChamCong;
		
		private string _idNhanVien;
		
		private string _idCongTrinh;
		
		private System.DateTime _ngayChamcong;
		
		private bool _trangThaiChamCong;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<CongTrinh> _CongTrinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChamCongChanging(int value);
    partial void OnidChamCongChanged();
    partial void OnidNhanVienChanging(string value);
    partial void OnidNhanVienChanged();
    partial void OnidCongTrinhChanging(string value);
    partial void OnidCongTrinhChanged();
    partial void OnngayChamcongChanging(System.DateTime value);
    partial void OnngayChamcongChanged();
    partial void OntrangThaiChamCongChanging(bool value);
    partial void OntrangThaiChamCongChanged();
    #endregion
		
		public DanhSachChamCong()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			this._CongTrinh = default(EntityRef<CongTrinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idChamCong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idChamCong
		{
			get
			{
				return this._idChamCong;
			}
			set
			{
				if ((this._idChamCong != value))
				{
					this.OnidChamCongChanging(value);
					this.SendPropertyChanging();
					this._idChamCong = value;
					this.SendPropertyChanged("idChamCong");
					this.OnidChamCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNhanVien", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string idNhanVien
		{
			get
			{
				return this._idNhanVien;
			}
			set
			{
				if ((this._idNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNhanVienChanging(value);
					this.SendPropertyChanging();
					this._idNhanVien = value;
					this.SendPropertyChanged("idNhanVien");
					this.OnidNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCongTrinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string idCongTrinh
		{
			get
			{
				return this._idCongTrinh;
			}
			set
			{
				if ((this._idCongTrinh != value))
				{
					if (this._CongTrinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCongTrinhChanging(value);
					this.SendPropertyChanging();
					this._idCongTrinh = value;
					this.SendPropertyChanged("idCongTrinh");
					this.OnidCongTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayChamcong", DbType="Date NOT NULL")]
		public System.DateTime ngayChamcong
		{
			get
			{
				return this._ngayChamcong;
			}
			set
			{
				if ((this._ngayChamcong != value))
				{
					this.OnngayChamcongChanging(value);
					this.SendPropertyChanging();
					this._ngayChamcong = value;
					this.SendPropertyChanged("ngayChamcong");
					this.OnngayChamcongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThaiChamCong", DbType="Bit NOT NULL")]
		public bool trangThaiChamCong
		{
			get
			{
				return this._trangThaiChamCong;
			}
			set
			{
				if ((this._trangThaiChamCong != value))
				{
					this.OntrangThaiChamCongChanging(value);
					this.SendPropertyChanging();
					this._trangThaiChamCong = value;
					this.SendPropertyChanged("trangThaiChamCong");
					this.OntrangThaiChamCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DanhSachChamCong", Storage="_NhanVien", ThisKey="idNhanVien", OtherKey="idNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.DanhSachChamCongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.DanhSachChamCongs.Add(this);
						this._idNhanVien = value.idNhanVien;
					}
					else
					{
						this._idNhanVien = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongTrinh_DanhSachChamCong", Storage="_CongTrinh", ThisKey="idCongTrinh", OtherKey="idCongTrinh", IsForeignKey=true)]
		public CongTrinh CongTrinh
		{
			get
			{
				return this._CongTrinh.Entity;
			}
			set
			{
				CongTrinh previousValue = this._CongTrinh.Entity;
				if (((previousValue != value) 
							|| (this._CongTrinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CongTrinh.Entity = null;
						previousValue.DanhSachChamCongs.Remove(this);
					}
					this._CongTrinh.Entity = value;
					if ((value != null))
					{
						value.DanhSachChamCongs.Add(this);
						this._idCongTrinh = value.idCongTrinh;
					}
					else
					{
						this._idCongTrinh = default(string);
					}
					this.SendPropertyChanged("CongTrinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CongViec")]
	public partial class CongViec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idCongViec;
		
		private string _tenCongViec;
		
		private bool _isDelete;
		
		private EntitySet<DanhSachCongViecCongTrinh> _DanhSachCongViecCongTrinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCongViecChanging(string value);
    partial void OnidCongViecChanged();
    partial void OntenCongViecChanging(string value);
    partial void OntenCongViecChanged();
    partial void OnisDeleteChanging(bool value);
    partial void OnisDeleteChanged();
    #endregion
		
		public CongViec()
		{
			this._DanhSachCongViecCongTrinhs = new EntitySet<DanhSachCongViecCongTrinh>(new Action<DanhSachCongViecCongTrinh>(this.attach_DanhSachCongViecCongTrinhs), new Action<DanhSachCongViecCongTrinh>(this.detach_DanhSachCongViecCongTrinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCongViec", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idCongViec
		{
			get
			{
				return this._idCongViec;
			}
			set
			{
				if ((this._idCongViec != value))
				{
					this.OnidCongViecChanging(value);
					this.SendPropertyChanging();
					this._idCongViec = value;
					this.SendPropertyChanged("idCongViec");
					this.OnidCongViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenCongViec", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string tenCongViec
		{
			get
			{
				return this._tenCongViec;
			}
			set
			{
				if ((this._tenCongViec != value))
				{
					this.OntenCongViecChanging(value);
					this.SendPropertyChanging();
					this._tenCongViec = value;
					this.SendPropertyChanged("tenCongViec");
					this.OntenCongViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDelete", DbType="Bit NOT NULL")]
		public bool isDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnisDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("isDelete");
					this.OnisDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongViec_DanhSachCongViecCongTrinh", Storage="_DanhSachCongViecCongTrinhs", ThisKey="idCongViec", OtherKey="idCongViec")]
		public EntitySet<DanhSachCongViecCongTrinh> DanhSachCongViecCongTrinhs
		{
			get
			{
				return this._DanhSachCongViecCongTrinhs;
			}
			set
			{
				this._DanhSachCongViecCongTrinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhSachCongViecCongTrinhs(DanhSachCongViecCongTrinh entity)
		{
			this.SendPropertyChanging();
			entity.CongViec = this;
		}
		
		private void detach_DanhSachCongViecCongTrinhs(DanhSachCongViecCongTrinh entity)
		{
			this.SendPropertyChanging();
			entity.CongViec = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhSachCongViecCongTrinh")]
	public partial class DanhSachCongViecCongTrinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _idCongTrinh;
		
		private string _idCongViec;
		
		private EntitySet<DanhSachPhanCong> _DanhSachPhanCongs;
		
		private EntityRef<CongViec> _CongViec;
		
		private EntityRef<CongTrinh> _CongTrinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidCongTrinhChanging(string value);
    partial void OnidCongTrinhChanged();
    partial void OnidCongViecChanging(string value);
    partial void OnidCongViecChanged();
    #endregion
		
		public DanhSachCongViecCongTrinh()
		{
			this._DanhSachPhanCongs = new EntitySet<DanhSachPhanCong>(new Action<DanhSachPhanCong>(this.attach_DanhSachPhanCongs), new Action<DanhSachPhanCong>(this.detach_DanhSachPhanCongs));
			this._CongViec = default(EntityRef<CongViec>);
			this._CongTrinh = default(EntityRef<CongTrinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCongTrinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string idCongTrinh
		{
			get
			{
				return this._idCongTrinh;
			}
			set
			{
				if ((this._idCongTrinh != value))
				{
					if (this._CongTrinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCongTrinhChanging(value);
					this.SendPropertyChanging();
					this._idCongTrinh = value;
					this.SendPropertyChanged("idCongTrinh");
					this.OnidCongTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCongViec", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string idCongViec
		{
			get
			{
				return this._idCongViec;
			}
			set
			{
				if ((this._idCongViec != value))
				{
					if (this._CongViec.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCongViecChanging(value);
					this.SendPropertyChanging();
					this._idCongViec = value;
					this.SendPropertyChanged("idCongViec");
					this.OnidCongViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhSachCongViecCongTrinh_DanhSachPhanCong", Storage="_DanhSachPhanCongs", ThisKey="id", OtherKey="idDSCongViecCongTrinh")]
		public EntitySet<DanhSachPhanCong> DanhSachPhanCongs
		{
			get
			{
				return this._DanhSachPhanCongs;
			}
			set
			{
				this._DanhSachPhanCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongViec_DanhSachCongViecCongTrinh", Storage="_CongViec", ThisKey="idCongViec", OtherKey="idCongViec", IsForeignKey=true)]
		public CongViec CongViec
		{
			get
			{
				return this._CongViec.Entity;
			}
			set
			{
				CongViec previousValue = this._CongViec.Entity;
				if (((previousValue != value) 
							|| (this._CongViec.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CongViec.Entity = null;
						previousValue.DanhSachCongViecCongTrinhs.Remove(this);
					}
					this._CongViec.Entity = value;
					if ((value != null))
					{
						value.DanhSachCongViecCongTrinhs.Add(this);
						this._idCongViec = value.idCongViec;
					}
					else
					{
						this._idCongViec = default(string);
					}
					this.SendPropertyChanged("CongViec");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongTrinh_DanhSachCongViecCongTrinh", Storage="_CongTrinh", ThisKey="idCongTrinh", OtherKey="idCongTrinh", IsForeignKey=true)]
		public CongTrinh CongTrinh
		{
			get
			{
				return this._CongTrinh.Entity;
			}
			set
			{
				CongTrinh previousValue = this._CongTrinh.Entity;
				if (((previousValue != value) 
							|| (this._CongTrinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CongTrinh.Entity = null;
						previousValue.DanhSachCongViecCongTrinhs.Remove(this);
					}
					this._CongTrinh.Entity = value;
					if ((value != null))
					{
						value.DanhSachCongViecCongTrinhs.Add(this);
						this._idCongTrinh = value.idCongTrinh;
					}
					else
					{
						this._idCongTrinh = default(string);
					}
					this.SendPropertyChanged("CongTrinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhSachPhanCongs(DanhSachPhanCong entity)
		{
			this.SendPropertyChanging();
			entity.DanhSachCongViecCongTrinh = this;
		}
		
		private void detach_DanhSachPhanCongs(DanhSachPhanCong entity)
		{
			this.SendPropertyChanging();
			entity.DanhSachCongViecCongTrinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhSachPhanCong")]
	public partial class DanhSachPhanCong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _idNhanVien;
		
		private int _idDSCongViecCongTrinh;
		
		private EntityRef<DanhSachCongViecCongTrinh> _DanhSachCongViecCongTrinh;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidNhanVienChanging(string value);
    partial void OnidNhanVienChanged();
    partial void OnidDSCongViecCongTrinhChanging(int value);
    partial void OnidDSCongViecCongTrinhChanged();
    #endregion
		
		public DanhSachPhanCong()
		{
			this._DanhSachCongViecCongTrinh = default(EntityRef<DanhSachCongViecCongTrinh>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNhanVien", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string idNhanVien
		{
			get
			{
				return this._idNhanVien;
			}
			set
			{
				if ((this._idNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNhanVienChanging(value);
					this.SendPropertyChanging();
					this._idNhanVien = value;
					this.SendPropertyChanged("idNhanVien");
					this.OnidNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDSCongViecCongTrinh", DbType="Int NOT NULL")]
		public int idDSCongViecCongTrinh
		{
			get
			{
				return this._idDSCongViecCongTrinh;
			}
			set
			{
				if ((this._idDSCongViecCongTrinh != value))
				{
					if (this._DanhSachCongViecCongTrinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDSCongViecCongTrinhChanging(value);
					this.SendPropertyChanging();
					this._idDSCongViecCongTrinh = value;
					this.SendPropertyChanged("idDSCongViecCongTrinh");
					this.OnidDSCongViecCongTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhSachCongViecCongTrinh_DanhSachPhanCong", Storage="_DanhSachCongViecCongTrinh", ThisKey="idDSCongViecCongTrinh", OtherKey="id", IsForeignKey=true)]
		public DanhSachCongViecCongTrinh DanhSachCongViecCongTrinh
		{
			get
			{
				return this._DanhSachCongViecCongTrinh.Entity;
			}
			set
			{
				DanhSachCongViecCongTrinh previousValue = this._DanhSachCongViecCongTrinh.Entity;
				if (((previousValue != value) 
							|| (this._DanhSachCongViecCongTrinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhSachCongViecCongTrinh.Entity = null;
						previousValue.DanhSachPhanCongs.Remove(this);
					}
					this._DanhSachCongViecCongTrinh.Entity = value;
					if ((value != null))
					{
						value.DanhSachPhanCongs.Add(this);
						this._idDSCongViecCongTrinh = value.id;
					}
					else
					{
						this._idDSCongViecCongTrinh = default(int);
					}
					this.SendPropertyChanged("DanhSachCongViecCongTrinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DanhSachPhanCong", Storage="_NhanVien", ThisKey="idNhanVien", OtherKey="idNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.DanhSachPhanCongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.DanhSachPhanCongs.Add(this);
						this._idNhanVien = value.idNhanVien;
					}
					else
					{
						this._idNhanVien = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idTaiKhoan;
		
		private string _matKhau;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTaiKhoanChanging(string value);
    partial void OnidTaiKhoanChanged();
    partial void OnmatKhauChanging(string value);
    partial void OnmatKhauChanged();
    #endregion
		
		public TaiKhoan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTaiKhoan", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idTaiKhoan
		{
			get
			{
				return this._idTaiKhoan;
			}
			set
			{
				if ((this._idTaiKhoan != value))
				{
					this.OnidTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._idTaiKhoan = value;
					this.SendPropertyChanged("idTaiKhoan");
					this.OnidTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matKhau", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string matKhau
		{
			get
			{
				return this._matKhau;
			}
			set
			{
				if ((this._matKhau != value))
				{
					this.OnmatKhauChanging(value);
					this.SendPropertyChanging();
					this._matKhau = value;
					this.SendPropertyChanged("matKhau");
					this.OnmatKhauChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongBan")]
	public partial class PhongBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idPhongBan;
		
		private string _tenPhongBan;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPhongBanChanging(string value);
    partial void OnidPhongBanChanged();
    partial void OntenPhongBanChanging(string value);
    partial void OntenPhongBanChanged();
    #endregion
		
		public PhongBan()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPhongBan", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idPhongBan
		{
			get
			{
				return this._idPhongBan;
			}
			set
			{
				if ((this._idPhongBan != value))
				{
					this.OnidPhongBanChanging(value);
					this.SendPropertyChanging();
					this._idPhongBan = value;
					this.SendPropertyChanged("idPhongBan");
					this.OnidPhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenPhongBan", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string tenPhongBan
		{
			get
			{
				return this._tenPhongBan;
			}
			set
			{
				if ((this._tenPhongBan != value))
				{
					this.OntenPhongBanChanging(value);
					this.SendPropertyChanging();
					this._tenPhongBan = value;
					this.SendPropertyChanged("tenPhongBan");
					this.OntenPhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_NhanVien", Storage="_NhanViens", ThisKey="idPhongBan", OtherKey="idPhongBan")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idNhanVien;
		
		private string _tenNhanVien;
		
		private string _diaChi;
		
		private string _sdt;
		
		private int _chucVu;
		
		private string _idPhongBan;
		
		private bool _isDelete;
		
		private EntitySet<DanhSachChamCong> _DanhSachChamCongs;
		
		private EntitySet<DanhSachPhanCong> _DanhSachPhanCongs;
		
		private EntityRef<PhongBan> _PhongBan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidNhanVienChanging(string value);
    partial void OnidNhanVienChanged();
    partial void OntenNhanVienChanging(string value);
    partial void OntenNhanVienChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    partial void OnsdtChanging(string value);
    partial void OnsdtChanged();
    partial void OnchucVuChanging(int value);
    partial void OnchucVuChanged();
    partial void OnidPhongBanChanging(string value);
    partial void OnidPhongBanChanged();
    partial void OnisDeleteChanging(bool value);
    partial void OnisDeleteChanged();
    #endregion
		
		public NhanVien()
		{
			this._DanhSachChamCongs = new EntitySet<DanhSachChamCong>(new Action<DanhSachChamCong>(this.attach_DanhSachChamCongs), new Action<DanhSachChamCong>(this.detach_DanhSachChamCongs));
			this._DanhSachPhanCongs = new EntitySet<DanhSachPhanCong>(new Action<DanhSachPhanCong>(this.attach_DanhSachPhanCongs), new Action<DanhSachPhanCong>(this.detach_DanhSachPhanCongs));
			this._PhongBan = default(EntityRef<PhongBan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNhanVien", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idNhanVien
		{
			get
			{
				return this._idNhanVien;
			}
			set
			{
				if ((this._idNhanVien != value))
				{
					this.OnidNhanVienChanging(value);
					this.SendPropertyChanging();
					this._idNhanVien = value;
					this.SendPropertyChanged("idNhanVien");
					this.OnidNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNhanVien", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string tenNhanVien
		{
			get
			{
				return this._tenNhanVien;
			}
			set
			{
				if ((this._tenNhanVien != value))
				{
					this.OntenNhanVienChanging(value);
					this.SendPropertyChanging();
					this._tenNhanVien = value;
					this.SendPropertyChanged("tenNhanVien");
					this.OntenNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdt", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sdt
		{
			get
			{
				return this._sdt;
			}
			set
			{
				if ((this._sdt != value))
				{
					this.OnsdtChanging(value);
					this.SendPropertyChanging();
					this._sdt = value;
					this.SendPropertyChanged("sdt");
					this.OnsdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chucVu", DbType="Int NOT NULL")]
		public int chucVu
		{
			get
			{
				return this._chucVu;
			}
			set
			{
				if ((this._chucVu != value))
				{
					this.OnchucVuChanging(value);
					this.SendPropertyChanging();
					this._chucVu = value;
					this.SendPropertyChanged("chucVu");
					this.OnchucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPhongBan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string idPhongBan
		{
			get
			{
				return this._idPhongBan;
			}
			set
			{
				if ((this._idPhongBan != value))
				{
					if (this._PhongBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPhongBanChanging(value);
					this.SendPropertyChanging();
					this._idPhongBan = value;
					this.SendPropertyChanged("idPhongBan");
					this.OnidPhongBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDelete", DbType="Bit NOT NULL")]
		public bool isDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnisDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("isDelete");
					this.OnisDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DanhSachChamCong", Storage="_DanhSachChamCongs", ThisKey="idNhanVien", OtherKey="idNhanVien")]
		public EntitySet<DanhSachChamCong> DanhSachChamCongs
		{
			get
			{
				return this._DanhSachChamCongs;
			}
			set
			{
				this._DanhSachChamCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_DanhSachPhanCong", Storage="_DanhSachPhanCongs", ThisKey="idNhanVien", OtherKey="idNhanVien")]
		public EntitySet<DanhSachPhanCong> DanhSachPhanCongs
		{
			get
			{
				return this._DanhSachPhanCongs;
			}
			set
			{
				this._DanhSachPhanCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_NhanVien", Storage="_PhongBan", ThisKey="idPhongBan", OtherKey="idPhongBan", IsForeignKey=true)]
		public PhongBan PhongBan
		{
			get
			{
				return this._PhongBan.Entity;
			}
			set
			{
				PhongBan previousValue = this._PhongBan.Entity;
				if (((previousValue != value) 
							|| (this._PhongBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongBan.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._PhongBan.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._idPhongBan = value.idPhongBan;
					}
					else
					{
						this._idPhongBan = default(string);
					}
					this.SendPropertyChanged("PhongBan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhSachChamCongs(DanhSachChamCong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_DanhSachChamCongs(DanhSachChamCong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_DanhSachPhanCongs(DanhSachPhanCong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_DanhSachPhanCongs(DanhSachPhanCong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CongTrinh")]
	public partial class CongTrinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idCongTrinh;
		
		private string _tenCongTrinh;
		
		private string _diaChi;
		
		private System.DateTime _ngayBatDau;
		
		private System.DateTime _ngayKetThucDuKien;
		
		private System.DateTime _ngayHoanThanh;
		
		private string _trangThai;
		
		private bool _isDelete;
		
		private EntitySet<DanhSachChamCong> _DanhSachChamCongs;
		
		private EntitySet<DanhSachCongViecCongTrinh> _DanhSachCongViecCongTrinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCongTrinhChanging(string value);
    partial void OnidCongTrinhChanged();
    partial void OntenCongTrinhChanging(string value);
    partial void OntenCongTrinhChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    partial void OnngayBatDauChanging(System.DateTime value);
    partial void OnngayBatDauChanged();
    partial void OnngayKetThucDuKienChanging(System.DateTime value);
    partial void OnngayKetThucDuKienChanged();
    partial void OnngayHoanThanhChanging(System.DateTime value);
    partial void OnngayHoanThanhChanged();
    partial void OntrangThaiChanging(string value);
    partial void OntrangThaiChanged();
    partial void OnisDeleteChanging(bool value);
    partial void OnisDeleteChanged();
    #endregion
		
		public CongTrinh()
		{
			this._DanhSachChamCongs = new EntitySet<DanhSachChamCong>(new Action<DanhSachChamCong>(this.attach_DanhSachChamCongs), new Action<DanhSachChamCong>(this.detach_DanhSachChamCongs));
			this._DanhSachCongViecCongTrinhs = new EntitySet<DanhSachCongViecCongTrinh>(new Action<DanhSachCongViecCongTrinh>(this.attach_DanhSachCongViecCongTrinhs), new Action<DanhSachCongViecCongTrinh>(this.detach_DanhSachCongViecCongTrinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCongTrinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idCongTrinh
		{
			get
			{
				return this._idCongTrinh;
			}
			set
			{
				if ((this._idCongTrinh != value))
				{
					this.OnidCongTrinhChanging(value);
					this.SendPropertyChanging();
					this._idCongTrinh = value;
					this.SendPropertyChanged("idCongTrinh");
					this.OnidCongTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenCongTrinh", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string tenCongTrinh
		{
			get
			{
				return this._tenCongTrinh;
			}
			set
			{
				if ((this._tenCongTrinh != value))
				{
					this.OntenCongTrinhChanging(value);
					this.SendPropertyChanging();
					this._tenCongTrinh = value;
					this.SendPropertyChanged("tenCongTrinh");
					this.OntenCongTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayBatDau", DbType="DateTime NOT NULL")]
		public System.DateTime ngayBatDau
		{
			get
			{
				return this._ngayBatDau;
			}
			set
			{
				if ((this._ngayBatDau != value))
				{
					this.OnngayBatDauChanging(value);
					this.SendPropertyChanging();
					this._ngayBatDau = value;
					this.SendPropertyChanged("ngayBatDau");
					this.OnngayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayKetThucDuKien", DbType="DateTime NOT NULL")]
		public System.DateTime ngayKetThucDuKien
		{
			get
			{
				return this._ngayKetThucDuKien;
			}
			set
			{
				if ((this._ngayKetThucDuKien != value))
				{
					this.OnngayKetThucDuKienChanging(value);
					this.SendPropertyChanging();
					this._ngayKetThucDuKien = value;
					this.SendPropertyChanged("ngayKetThucDuKien");
					this.OnngayKetThucDuKienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayHoanThanh", DbType="DateTime NOT NULL")]
		public System.DateTime ngayHoanThanh
		{
			get
			{
				return this._ngayHoanThanh;
			}
			set
			{
				if ((this._ngayHoanThanh != value))
				{
					this.OnngayHoanThanhChanging(value);
					this.SendPropertyChanging();
					this._ngayHoanThanh = value;
					this.SendPropertyChanged("ngayHoanThanh");
					this.OnngayHoanThanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string trangThai
		{
			get
			{
				return this._trangThai;
			}
			set
			{
				if ((this._trangThai != value))
				{
					this.OntrangThaiChanging(value);
					this.SendPropertyChanging();
					this._trangThai = value;
					this.SendPropertyChanged("trangThai");
					this.OntrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDelete", DbType="Bit NOT NULL")]
		public bool isDelete
		{
			get
			{
				return this._isDelete;
			}
			set
			{
				if ((this._isDelete != value))
				{
					this.OnisDeleteChanging(value);
					this.SendPropertyChanging();
					this._isDelete = value;
					this.SendPropertyChanged("isDelete");
					this.OnisDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongTrinh_DanhSachChamCong", Storage="_DanhSachChamCongs", ThisKey="idCongTrinh", OtherKey="idCongTrinh")]
		public EntitySet<DanhSachChamCong> DanhSachChamCongs
		{
			get
			{
				return this._DanhSachChamCongs;
			}
			set
			{
				this._DanhSachChamCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CongTrinh_DanhSachCongViecCongTrinh", Storage="_DanhSachCongViecCongTrinhs", ThisKey="idCongTrinh", OtherKey="idCongTrinh")]
		public EntitySet<DanhSachCongViecCongTrinh> DanhSachCongViecCongTrinhs
		{
			get
			{
				return this._DanhSachCongViecCongTrinhs;
			}
			set
			{
				this._DanhSachCongViecCongTrinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhSachChamCongs(DanhSachChamCong entity)
		{
			this.SendPropertyChanging();
			entity.CongTrinh = this;
		}
		
		private void detach_DanhSachChamCongs(DanhSachChamCong entity)
		{
			this.SendPropertyChanging();
			entity.CongTrinh = null;
		}
		
		private void attach_DanhSachCongViecCongTrinhs(DanhSachCongViecCongTrinh entity)
		{
			this.SendPropertyChanging();
			entity.CongTrinh = this;
		}
		
		private void detach_DanhSachCongViecCongTrinhs(DanhSachCongViecCongTrinh entity)
		{
			this.SendPropertyChanging();
			entity.CongTrinh = null;
		}
	}
}
#pragma warning restore 1591
